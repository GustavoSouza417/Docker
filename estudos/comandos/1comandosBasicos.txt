docker version
  Retorna a versão do Docker, como também outras informações
  É útil para saber se ele está funcionando e se ele é um
  docker client ou server


docker info
  Retorna quantos containers você tem e informações sobre eles,
  como também informações sobre suas imagens, plugins e afins


docker --help
  Retorna informações sobre todos os comandos do Docker
  Pode ser executado dentro de comandos para exibir informações
  sobre sub-comandos






docker container run -p 8080:80 nginx
  Roda o container docker "nginx"
  O comando "run" serve para criar containers e iniciá-los após sua criação
  O host acessará o serviço por sua porta 8080 (poderia ser qualquer outra porta vazia)
  O nginx executará na porta 80 por padrão, então ali deve ser 80
  No caso, a porta 8080 do host está sendo mapeada para a porta 80 do nginx
  Então, toda vez que o host acessar a sua porta 8080, ele será redirecionado para
  A porta 80 do nginx
  Se você quiser que o nginx execute em outra porta, você precisa reconfigurá-lo


docker container run -d -p 8080:80 nginx
  Roda o container docker "nginx" na porta 8080 em segundo plano


docker container run -P nginx
  Roda o container docker "nginx" numa porta randômica


docker container run -d -p 80:80 --name AlgumNomeParaContainer nginx
  Você pode dar nomes a containers e, assim, consegue selecionar
  containers diretamente pelo nome, sem ter que usar o ID


docker container run --name container1 -d --network host -p 8080:80 nginx:alpine
  Atribui a rede "host" para o container  
  Já que é uma rede host, o host e o container precisam ter
  portas distintas (80:80 não funcioanaria)
  Novos containers também não podem ocupar nem a porta 8080 e nem 80
  depois dessa instância





docker container stop <ID do Container || Nome do Container>
  Para a execução do container


docker container start <ID do Container || Nome do Container>
  Executa um container que já foi criado e está parado






docker container ls
  Lista todos os containers que estão em funcionamento


docker container ls -a
  Lista todos os containers, tanto os em funcionamento
  quanto os que estão parados


docker container ls -a -q
  Retorna "apenas o ID" de todos os containers


docker network ls
  Retorna as redes que você possui






docker container rm <ID do Container || Nome do Container>
  Exclui um container que não está em execução
  Para excluir containers em execução, é preciso pará-los primeiro
  Você pode excluir vários containers de uma vez passando-os
  em sequência


docker container rm -f <ID do Container || Nome do Container>
  Força a remoção de um container, mesmo que esteja em execução


docker container rm -f $(docker container ls -a -q)
  Exclui todos os containers de uma vez só, tanto os que estão
  em funcionamento quanto os que estão parados






docker container logs <ID do Container || Nome do Container>
  Exibe as mensagens de log de determinado container
  Se você nunca acessou o container, ele não retornará logs


docker container top <ID do Container || Nome do Container>
  Mostra quais processos (PID) o container está executando
  no sistema operativo


docker container inspect <ID do Container || Nome do Container>
  Retorna informações detalhadas sobre quais redes estão sendo
  utilizadas por determinado container






docker container stats
  Exibe como está o uso de recursos do computador em relação
  a todos os containers


docker container stats <ID do Container || Nome do Container>
  Exibe o uso de recursos do computador em relação ao container
  passado como argumento